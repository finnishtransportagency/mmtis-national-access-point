@startuml

actor "Transport operator" as OPER
participant "NAP UI" as UI
participant "Interface server" as IFACE
participant "NAP DB" as DB
participant "Import process" as IMP
participant "Package archive (S3)" as S3
participant "Detection process" as DEP

group Adding new transit interface
OPER->UI: Add interface
        UI->IFACE: Fetch data for validation
        IFACE->UI: Data / error
                UI->OPER: Validation response

                OPER->UI: Save interface
UI->DB: Save interface
end

group Background import process
IMP->DB: Fetch interfaces that need to be updated
DB->IMP: Interfaces to be updated
loop For each interface
IMP->IFACE: Fetch latest package if changed
IFACE->IMP: New package (or 304 Not Modified)
alt New package received
 IMP->S3: Store new package
 IMP->DB: Update package metadata
 IMP->DB: Store parsed transit data
 IMP->DB: Calculate package date hashes
else 304 Not Modified
 IMP->DB: Update package check timestamp
end
end
end

group Background detection process
DEP->DB: Fetch services for detection
DB->DEP: Services
loop For each service
DEP->DB: Detect next changes for service
end
end




@enduml
