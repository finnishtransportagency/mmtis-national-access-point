#!/bin/bash

# Script to populate hosts file on AWS VPC's bastion host.
# Will only work for instances within same region and same AWS account
# Bastion host and instances can exist in different VPC's
# -
# Instance requirements aws-cli and jq
# AWS requirements: ec2 read rights for instance iam policy
# -
# Run this on bastion host cron every ~5 minutes
# Edit your ssh-config to point instance Name tag value instead of private ip address

set -eu
awsregion=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document|grep region|awk -F\" '{print $4}')
outputfile="/tmp/output.json"
hostsfile="/etc/hosts"

# it's good idea to keep the outputfile if debugging is required.
aws ec2 describe-instances --region "$awsregion" --output json --filters "Name=instance-state-name,Values=running" > "$outputfile"
privateipaddresses=($(cat "$outputfile" | jq '.Reservations[].Instances[].NetworkInterfaces[].PrivateIpAddress' | tr -d \"))
tagnamevalues=($(cat "$outputfile" | jq '.Reservations[].Instances[].Tags[] | select(.Key=="Name") .Value' | tr -d \"))

# function to populate hosts-file
populatehosts () {
  sed -i '/autogenerated/Q' "$hostsfile"
  echo "#autogenerated entries below this, do not edit manually" >> "$hostsfile"
  counter=0
  while [ "$counter" -lt "${#privateipaddresses[@]}" ]
    do
      echo -e "${privateipaddresses[counter]}""\t\t""${tagnamevalues[counter]}" >> "$hostsfile"
      counter=$((counter + 1)) 
  done
}

# check if both arrays are equal lenght
if (( "${#privateipaddresses[@]}" == "${#tagnamevalues[@]}" ))
  then
    populatehosts
  else
    exit 5 # mismatch array length
fi
