- name: Gathering ec2 facts
  action: ec2_metadata_facts

- name: Fetch ALB Target group ARN
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 describe-target-groups
     --names "{{vault_ote_target_group_name}}"
  register: target_group

- name: Set instance id
  set_fact: instance_id="{{ansible_ec2_instance_id}}"

- name: De-register from ALB
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 deregister-targets
    --target-group-arn "{{(target_group.stdout | from_json).TargetGroups[0].TargetGroupArn}}"
    --targets Id="{{instance_id}}",Port="3000"

- pause:
    seconds: 10

- name: Install required packages
  yum: name=[u'java-1.8.0-openjdk'] state=installed

- name: Install required package for nsjail - bison
  yum:
    name: bison
    state: installed

- name: Install required package for nsjail - flex
  yum:
    name: flex
    state: installed

- name: Install required package for nsjail - protobuf-devel
  yum:
    name: protobuf-devel
    state: installed

- name: Install required package for nsjail - protobuf-compiler
  yum:
    name: protobuf-compiler
    state: installed

- name: Create chouette folder
  file: path=/opt/chouette state=directory owner=napote group=napote

- name: Ensure botocore and boto3 modules are installed
  pip:
    name:         [ "boto3"]
    extra_args:   "--user"

- name: Copy chouette-command.zip from s3
  aws_s3:
    bucket: ote-assets
    object: chouette-command.zip
    dest: /opt/chouette-command.zip
    mode: get

- name: Extract chouette-command.zip into /opt/ will make folder /opt/chouette-cmd_3.4.8/
  unarchive:
    src: /opt/chouette-command.zip
    remote_src: yes
    dest: /opt/

- name: Copy /opt/chouette-cmd_3.4.8/ to /opt/chouette
  command: cp -r /opt/chouette-cmd_3.4.8/. /opt/chouette/

- name: Delete folder /opt/chouette-cmd_3.4.8/
  command: rm -rf /opt/chouette-cmd_3.4.8/

- name: Delete ZIP chouette-command.zip
  command: rm -rf /opt/chouette-command.zip

- name: Create nsjail folder
  file: path=/opt/nsjail state=directory owner=napote group=napote

- name: Get nsjail from github
  git:
    repo: 'https://github.com/google/nsjail.git'
    dest: /opt/nsjail
    version: '2.8'

- name: Install nsjail using make
  make:
    chdir: /opt/nsjail

- name: Change nsjail ownership, group and permissions
  file:
    path: /opt/nsjail/nsjail
    owner: napote
    group: napote
    mode: '0755'

- name: Write ns-chouette script which uses nsjail
  template: src=templates/ote/ns-chouette.sh.j2 dest=/opt/chouette/ns-chouette.sh owner=napote group=napote mode=755
  tags: configuration

- name: Create OTE app folder
  file: path=/opt/ote state=directory owner=napote group=napote

- name: Create OTE config
  template: src=templates/ote/config.edn.j2 dest=/opt/ote/config.edn
  tags: configuration

- name: Write OTE startup script
  template: src=templates/ote/ote.sh.j2 dest=/opt/ote/ote.sh mode=755
  tags: configuration

- name: Write OTE service
  template: src=templates/centos7-service-template.j2 dest=/etc/systemd/system/ote.service mode=755
  with_items:
    - description: "OTE"
      start_file: /opt/ote/ote.sh
      user_name: napote
      user_group: napote
      workingdir: /opt/ote
  tags: configuration

- name: Upload OTE build
  copy: src={{ote_build_artifact}} dest=/opt/ote/ote.jar owner=napote
  tags: deploy

- name: Restart OTE service
  service: name=ote state=restarted
  tags: configuration,deploy

- name: Wait for service search URL to respond 200
  uri: url="http://localhost:3000/service-search?offset=0&limit=0" status_code=200
  register: result
  until: result.status == 200
  retries: 30
  delay: 10

- name: Register to ALB
  delegate_to: 127.0.0.1
  become: false
  command: >
    aws elbv2 register-targets
    --target-group-arn "{{(target_group.stdout | from_json).TargetGroups[0].TargetGroupArn}}"
    --targets Id="{{instance_id}}",Port="3000"

- pause:
    seconds: 10