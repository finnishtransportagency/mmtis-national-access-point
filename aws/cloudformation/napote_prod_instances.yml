AWSTemplateFormatVersion: 2010-09-09
Resources:
  DBEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId: !Ref AppInstanceMetaSG
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          SourceSecurityGroupId: !ImportValue 
            'Fn::Sub': ci-vpc-BastionMetaSG
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AllowPSQLFromInstancesSG
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  AllowConnsFromBastionSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Group for allowing connections from Bastion Host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !ImportValue 
            'Fn::Sub': ci-vpc-BastionMetaSG
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AllowConnsFromBastionSG
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  AllowConnsFromAppELB:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Group for allowing connections from Application ELB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5000'
          ToPort: '5000'
          SourceSecurityGroupId: !Ref AppELBSG
        - IpProtocol: tcp
          FromPort: '3000'
          ToPort: '3000'
          SourceSecurityGroupId: !Ref AppELBSG
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          SourceSecurityGroupId: !Ref AppELBSG
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AllowConnsFromAppELB
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  AppELBSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Application ELB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AppELBSG
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  ApplicationLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Name: !Join 
        - ''
        - - AppLB-
          - !Ref environmentName
      Scheme: internet-facing
      SecurityGroups:
        - !Ref AppELBSG
      Subnets:
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPublicASubnet
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPublicBSubnet
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPublicCSubnet
      Type: application
      IpAddressType: ipv4
  appelbssllistener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn: !Ref CertARN
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ckantargetgroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
  appelbredirectlistener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref redirecttargetgroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  otelistenerrule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref otetargetgroup
      Conditions:
        - Field: path-pattern
          Values:
            - /ote*
      ListenerArn: !Ref appelbssllistener
      Priority: 1
  ckantargetgroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: !Join 
        - ''
        - - ckan-
          - !Ref environmentName
      Port: 5000
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      Targets:
        - Id: !Ref ckan
          Port: 5000
        - Id: !Ref ckantwo
          Port: 5000
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  otetargetgroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: !Join 
        - ''
        - - ote-
          - !Ref environmentName
      Port: 3000
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      Targets:
        - Id: !Ref ote
          Port: 3000
        - Id: !Ref otetwo
          Port: 3000
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  redirecttargetgroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200,301'
      Name: !Join 
        - ''
        - - redirect-to-https-
          - !Ref environmentName
      Port: 8080
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      Targets:
        - Id: !Ref ckan
          Port: 8080
        - Id: !Ref ckantwo
          Port: 8080
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Join 
        - ''
        - - napote-db-
          - !Ref environmentName
      AllocatedStorage: '15'
      DBInstanceClass: db.t2.medium
      Engine: postgres
      MultiAZ: true
      MasterUsername: napotedbrootprod
      MasterUserPassword: !Ref DBMasterPassword
      VPCSecurityGroups:
        - !Ref DBEC2SecurityGroup
      DBSubnetGroupName: !Ref DBsubnetgroupprod
      StorageType: gp2
      BackupRetentionPeriod: '7'
  DBsubnetgroupprod:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: db subnet group for prod
      SubnetIds:
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPrivateSubnetA
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPrivateSubnetB
  ckan:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref CkanInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-ckan1-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetA
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowConnsFromAppELB
        - !Ref AppInstanceMetaSG
  ote:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref OteInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-ote1-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetA
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowConnsFromAppELB
        - !Ref AppInstanceMetaSG
  solr:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref SolrInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-solr1-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetA
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowSolrFromAppSG
  ckantwo:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref CkanInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-ckan2-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetB
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowConnsFromAppELB
        - !Ref AppInstanceMetaSG
  otetwo:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref OteInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-ote2-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetB
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowConnsFromAppELB
        - !Ref AppInstanceMetaSG
  solrtwo:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref ImageID
      IamInstanceProfile: !Ref SolrInstanceProfile
      InstanceType: t2.medium
      KeyName: !Ref sshKeyName
      Monitoring: 'false'
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - napote-solr2-
              - !Ref environmentName
              - .finap.fi
      SubnetId: !ImportValue 
        'Fn::Sub': prod-vpc-AppPrivateSubnetB
      SecurityGroupIds:
        - !Ref AllowConnsFromBastionSG
        - !Ref AllowSolrFromAppSG
  AppInstanceMetaSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for environment app instances
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AppInstanceMetaSG
  AllowSolrFromAppSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Group for allowing connections from app instances to solr
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8983'
          ToPort: '8983'
          SourceSecurityGroupId: !Ref AppInstanceMetaSG
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: AllowSolrFromAppSG
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  ElasticacheSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Elasticache Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '6379'
          ToPort: '6379'
          SourceSecurityGroupId: !Ref AppInstanceMetaSG
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: ElasticacheSG
      VpcId: !ImportValue 
        'Fn::Sub': prod-vpc-VPCID
  ElasticacheCluster:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      AutoMinorVersionUpgrade: 'true'
      Engine: redis
      CacheNodeType: cache.t2.small
      NumCacheNodes: '1'
      VpcSecurityGroupIds:
        - !GetAtt 
          - ElasticacheSecurityGroup
          - GroupId
      CacheSubnetGroupName: !Ref Cachesubnetgroupprod
  Cachesubnetgroupprod:
    Type: 'AWS::ElastiCache::SubnetGroup'
    Properties:
      Description: subnet group for elasticache
      SubnetIds:
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPrivateSubnetA
        - !ImportValue 
          'Fn::Sub': prod-vpc-AppPrivateSubnetB
Parameters:
  projectTag:
    Description: Project Name for Tagging Purposes
    Type: String
    Default: napote-prod
  CertARN:
    Description: CertARN for application ELB
    Type: String
    Default: omitted
  ImageID:
    Description: Image ID
    Type: String
    Default: ami-db6ddbb4
  sshKeyName:
    Description: SSH key name to use on new instances
    Type: String
    Default: napote-prod
  environmentName:
    Description: 'Name of AppEnvironment e.g. DEV, PROD or similar'
    Type: String
    Default: prod
  CkanInstanceProfile:
    Description: CkanInstanceProfile
    Type: String
    Default: ckan-ec2-role
  SolrInstanceProfile:
    Description: SolrInstanceProfile
    Type: String
    Default: solr-ec2-role
  OteInstanceProfile:
    Description: OteInstanceProfile
    Type: String
    Default: ote-ec2-role
  DBMasterPassword:
    Description: DBMasterPassword (default will not work because it's too short)
    Type: String
    Default: replace
Outputs:
  envname:
    Value: !Ref environmentName
Description: Application instance stack.

