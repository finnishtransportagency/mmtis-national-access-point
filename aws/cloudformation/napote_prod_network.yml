AWSTemplateFormatVersion: 2010-09-09
Resources:
  AppVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - AppVPC-
              - !Ref environmentName
      CidrBlock: !Ref vpcCIDR
  dhcpoptionset:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: eu-central-1.compute.internal
      DomainNameServers:
        - 169.254.169.253
      NtpServers:
        - 169.254.169.123
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - napote-dhcp-options-set-
              - !Ref environmentName
  vpcdhcpoptionasso:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      DhcpOptionsId: !Ref dhcpoptionset
      VpcId: !Ref AppVPC
  NatGWEIP:
    Type: 'AWS::EC2::EIP'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    DependsOn: InternetGateway
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref AppVPC
  AppPublicASubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref publicNetAAvailabilityZone
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - 'AppPublicASubnet '
              - !Ref environmentName
      CidrBlock: !Ref publicNetACIDR
      VpcId: !Ref AppVPC
  AppPublicBSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref publicNetBAvailabilityZone
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - 'AppPublicBSubnet '
              - !Ref environmentName
      CidrBlock: !Ref publicNetBCIDR
      VpcId: !Ref AppVPC
  AppPublicCSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref publicNetCAvailabilityZone
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - 'AppPublicCSubnet '
              - !Ref environmentName
      CidrBlock: !Ref publicNetCCIDR
      VpcId: !Ref AppVPC
  AppPrivateSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref privateNetAAvailabilityZone
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - 'AppPrivateSubnetA '
              - !Ref environmentName
      CidrBlock: !Ref privateNetACIDR
      VpcId: !Ref AppVPC
  AppPrivateSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref privateNetBAvailabilityZone
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: !Join 
            - ''
            - - 'AppPrivateSubnetB '
              - !Ref environmentName
      CidrBlock: !Ref privateNetBCIDR
      VpcId: !Ref AppVPC
  PublicNetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: InternetGatewayAttachment
    Properties:
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: PublicNetRouteTable
      VpcId: !Ref AppVPC
  PrivateNetRouteTable:
    Type: 'AWS::EC2::RouteTable'
    DependsOn: InternetGatewayAttachment
    Properties:
      Tags:
        - Key: project
          Value: !Ref projectTag
        - Key: Name
          Value: PrivateNetRouteTable
      VpcId: !Ref AppVPC
  NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NatGWEIP
        - AllocationId
      SubnetId: !Ref AppPublicASubnet
  PrivateSubnetARouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateNetRouteTable
      SubnetId: !Ref AppPrivateSubnetA
  PrivateSubnetBRouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateNetRouteTable
      SubnetId: !Ref AppPrivateSubnetB
  PublicSubnetARouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicNetRouteTable
      SubnetId: !Ref AppPublicASubnet
  PublicSubnetBRouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicNetRouteTable
      SubnetId: !Ref AppPublicBSubnet
  PublicSubnetCRouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicNetRouteTable
      SubnetId: !Ref AppPublicCSubnet
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicNetRouteTable
      GatewayId: !Ref InternetGateway
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateNetRouteTable
      NatGatewayId: !Ref NATGateway
Parameters:
  projectTag:
    Description: Project Name for Tagging Purposes
    Type: String
    Default: napote-prod
  vpcName:
    Description: VPC Name
    Type: String
    Default: napote-prod-vpc
  vpcCIDR:
    Description: VPC CIDR
    Type: String
    Default: 10.66.0.0/16
  publicNetACIDR:
    Description: Public Subnet A CIDR
    Type: String
    Default: 10.66.1.0/24
  publicNetAAvailabilityZone:
    Description: Public Subnet A Availability Zone
    Type: String
    Default: eu-central-1a
  publicNetBCIDR:
    Description: Public Subnet B CIDR
    Type: String
    Default: 10.66.2.0/24
  publicNetBAvailabilityZone:
    Description: Public Subnet B Availability Zone
    Type: String
    Default: eu-central-1b
  publicNetCCIDR:
    Description: Public Subnet C CIDR
    Type: String
    Default: 10.66.3.0/24
  publicNetCAvailabilityZone:
    Description: Public Subnet C Availability Zone
    Type: String
    Default: eu-central-1c
  privateNetACIDR:
    Description: Private Subnet A CIDR
    Type: String
    Default: 10.66.4.0/24
  privateNetAAvailabilityZone:
    Description: Private Subnet A Availability Zone
    Type: String
    Default: eu-central-1a
  privateNetBCIDR:
    Description: Private Subnet B CIDR
    Type: String
    Default: 10.66.5.0/24
  privateNetBAvailabilityZone:
    Description: Private Subnet B Availability Zone
    Type: String
    Default: eu-central-1b
  privateNetCCIDR:
    Description: Private Subnet C CIDR
    Type: String
    Default: 10.66.6.0/24
  privateNetCAvailabilityZone:
    Description: Private Subnet C Availability Zone
    Type: String
    Default: eu-central-1c
  appImageID:
    Description: Image ID
    Type: String
    Default: omitted
  sshKeyName:
    Description: SSH key name to use on new instances
    Type: String
    Default: napote-prod
  environmentName:
    Description: 'Name of AppEnvironment e.g. DEV, PROD or similar'
    Type: String
    Default: prod
  CIVPCIDCIDRRange:
    Description: CI VPC CIDR
    Type: String
    Default: 10.55.0.0/16
Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref AppVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  PublicNetRouteTable:
    Value: !Ref PublicNetRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-PublicNetRouteTable'
  PrivateNetRouteTable:
    Value: !Ref PrivateNetRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-PrivateNetRouteTable'
  privateSubnetA:
    Value: !Ref AppPrivateSubnetA
    Export:
      Name: !Sub '${AWS::StackName}-AppPrivateSubnetA'
  privateSubnetB:
    Value: !Ref AppPrivateSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-AppPrivateSubnetB'
  AppPublicASubnet:
    Value: !Ref AppPublicASubnet
    Export:
      Name: !Sub '${AWS::StackName}-AppPublicASubnet'
  AppPublicBSubnet:
    Value: !Ref AppPublicBSubnet
    Export:
      Name: !Sub '${AWS::StackName}-AppPublicBSubnet'
  AppPublicCSubnet:
    Value: !Ref AppPublicCSubnet
    Export:
      Name: !Sub '${AWS::StackName}-AppPublicCSubnet'
Description: 'Application network stack, creates Application VPC with subnets.'

