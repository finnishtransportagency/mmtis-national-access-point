["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Date",["^ "],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ote.ui.validation","~:imports",null,"~:requires",["^ ","~$r","~$reagent.core","^<","^<","~$str","~$clojure.string","^>","^>","~$t","~$cljs-time.core","^?","^?","~$ote.localization","^@","~$fmt","~$ote.format","^B","^B"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$atom","^<","~$tr-key","^@","~$tr","^@"],"~:defs",["^ ","~$empty-value?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","~:line",17,"~:column",7,"~:end-line",17,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^R",[["~$arvo"]]]]]],"^8","~$ote.ui.validation/empty-value?","~:variadic",false,"^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^P",19,"~:method-params",["^R",[["^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^N",1,"^M",17,"^O",17,"~:max-fixed-arity",1,"~:fn-var",true,"^Q",["^R",["^S",["^R",[["^T"]]]]]],"~$validate-rule",["^ ","^8","~$ote.ui.validation/validate-rule","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",27,"^N",1,"^O",27,"^P",24,"^K",["^ ","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",27,"^N",11,"^O",27,"^P",24],"~:tag","~$cljs.core/MultiFn"],"~$year-month-and-day",["^ ","^8","~$ote.ui.validation/year-month-and-day","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",88,"^N",1,"^O",88,"^P",24,"^K",["^ ","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",88,"^N",6,"^O",88,"^P",24],"^12","~$any"],"~$validate-rules",["^ ","^J",null,"^K",["^ ","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",126,"^N",7,"^O",126,"^P",21,"^Q",["^R",["^S",["^R",[["~$name","~$data","~$row","~$table","~$rules"]]]]],"~:doc","Returns all validation errors for a field as a sequence. If the sequence is empty,\n  validation passed without errors."],"^8","~$ote.ui.validation/validate-rules","^V",false,"^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^P",21,"^W",["^R",[["^18","^19","^1:","^1;","^1<"]]],"^X",null,"^Y",["^R",[null,null]],"^N",1,"^M",126,"^O",126,"^Z",5,"^[",true,"^Q",["^R",["^S",["^R",[["^18","^19","^1:","^1;","^1<"]]]]],"^1=","Returns all validation errors for a field as a sequence. If the sequence is empty,\n  validation passed without errors."],"~$validate-row",["^ ","^J",null,"^K",["^ ","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",137,"^N",7,"^O",137,"^P",19,"^Q",["^R",["^S",["^R",[["^1;","^1:","~$schemas"],["^1;","^1:","^1@","~$type"]]]]],"^1=","Validate all fields of a single row/form of data.\n  Returns a map of {field-name [errors]}.\n  Type selects the validations to use and must be one of: `#{:validate :warn :notice}`.\n  The default type is `:validate`.","~:top-fn",["^ ","^V",false,"^Z",4,"^W",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^Q",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^Y",["^R",[null,null]]]],"^8","~$ote.ui.validation/validate-row","^V",false,"^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^P",19,"^1B",["^ ","^V",false,"^Z",4,"^W",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^Q",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^Y",["^R",[null,null]]],"^W",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^X",null,"^Y",["^R",[null,null]],"^N",1,"^M",137,"^O",137,"^Z",4,"^[",true,"^Q",["^R",[["^1;","^1:","^1@"],["^1;","^1:","^1@","^1A"]]],"^1=","Validate all fields of a single row/form of data.\n  Returns a map of {field-name [errors]}.\n  Type selects the validations to use and must be one of: `#{:validate :warn :notice}`.\n  The default type is `:validate`."],"~$missing-required-fields",["^ ","^J",null,"^K",["^ ","^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^M",162,"^N",7,"^O",162,"^P",30,"^Q",["^R",["^S",["^R",[["^1:","~$skeema"]]]]],"^1=","Returns a sequence of schemas that are marked as required and are missing a value."],"^8","~$ote.ui.validation/missing-required-fields","^V",false,"^L","/Users/markussak/Dev/mmtis-national-access-point/ote/src/cljs/ote/ui/validation.cljs","^P",30,"^W",["^R",[["^1:","^1E"]]],"^X",null,"^Y",["^R",[null,null]],"^N",1,"^M",162,"^O",162,"^Z",2,"^[",true,"^Q",["^R",["^S",["^R",[["^1:","^1E"]]]]],"^1=","Returns a sequence of schemas that are marked as required and are missing a value."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$r","^<","^<","^<"],"~:cljs.analyzer/constants",["^ ","~:seen",["^7",["~:business-id","~:common-texts","~:unique","~:required?","~:date-after","~:non-negative-if-key","~:constant-notice","~:validate","~:read","~:default","^8","~:type","~:non-empty","~:postal-code","~:invalid-postal-code","~:non-in-the-future","~:same-date","~:one-of","~:is-empty?","~:hierarchy","~:non-empty-if-other-key-nil","~:number-range","~:date-after-field","~:date-before"]],"~:order",["^21","^1T","^1Q","^1V","^1P","^22","^1Y","^1[","^1M","^24","^1O","^25","^1Z","^23","^1K","^1W","^1L","^1X","^1R","^8","^1S","^1N","^1U","^20"]],"^1=","OTE field validation.\n  A field schema can define a vector of validation rules to apply.\n  A validation rule is either a function which takes the value to validate\n  and the whole form data and returns either `nil` (no errors) or a human\n  readable string description of the validation errors.\n\n  A validation can also be a vector where the first element is the name\n  of a builtin validation rule and the rest are its arguments, if any."]