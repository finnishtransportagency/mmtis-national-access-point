// Compiled by ClojureScript 1.9.908 {}
goog.provide('specql.transform');
goog.require('cljs.core');
goog.require('cljs.spec.alpha');

/**
 * @interface
 */
specql.transform.Transform = function(){};

/**
 * Transform value from SQL result set. This is called before query returns a value.
 */
specql.transform.from_sql = (function specql$transform$from_sql(this$,sql_value){
if((!((this$ == null))) && (!((this$.specql$transform$Transform$from_sql$arity$2 == null)))){
return this$.specql$transform$Transform$from_sql$arity$2(this$,sql_value);
} else {
var x__30908__auto__ = (((this$ == null))?null:this$);
var m__30909__auto__ = (specql.transform.from_sql[goog.typeOf(x__30908__auto__)]);
if(!((m__30909__auto__ == null))){
return m__30909__auto__.call(null,this$,sql_value);
} else {
var m__30909__auto____$1 = (specql.transform.from_sql["_"]);
if(!((m__30909__auto____$1 == null))){
return m__30909__auto____$1.call(null,this$,sql_value);
} else {
throw cljs.core.missing_protocol.call(null,"Transform.from-sql",this$);
}
}
}
});

/**
 * Transform value back to SQL for update or insert.
 */
specql.transform.to_sql = (function specql$transform$to_sql(this$,transformed_value){
if((!((this$ == null))) && (!((this$.specql$transform$Transform$to_sql$arity$2 == null)))){
return this$.specql$transform$Transform$to_sql$arity$2(this$,transformed_value);
} else {
var x__30908__auto__ = (((this$ == null))?null:this$);
var m__30909__auto__ = (specql.transform.to_sql[goog.typeOf(x__30908__auto__)]);
if(!((m__30909__auto__ == null))){
return m__30909__auto__.call(null,this$,transformed_value);
} else {
var m__30909__auto____$1 = (specql.transform.to_sql["_"]);
if(!((m__30909__auto____$1 == null))){
return m__30909__auto____$1.call(null,this$,transformed_value);
} else {
throw cljs.core.missing_protocol.call(null,"Transform.to-sql",this$);
}
}
}
});

/**
 * Generate a spec for the transformed value. The input-spec is the spec that
 *   would be generated by default.
 */
specql.transform.transform_spec = (function specql$transform$transform_spec(this$,input_spec){
if((!((this$ == null))) && (!((this$.specql$transform$Transform$transform_spec$arity$2 == null)))){
return this$.specql$transform$Transform$transform_spec$arity$2(this$,input_spec);
} else {
var x__30908__auto__ = (((this$ == null))?null:this$);
var m__30909__auto__ = (specql.transform.transform_spec[goog.typeOf(x__30908__auto__)]);
if(!((m__30909__auto__ == null))){
return m__30909__auto__.call(null,this$,input_spec);
} else {
var m__30909__auto____$1 = (specql.transform.transform_spec["_"]);
if(!((m__30909__auto____$1 == null))){
return m__30909__auto____$1.call(null,this$,input_spec);
} else {
throw cljs.core.missing_protocol.call(null,"Transform.transform-spec",this$);
}
}
}
});

cljs.spec.alpha.def_impl.call(null,new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","satisfies?","cljs.core/satisfies?",-1074798682,null),new cljs.core.Symbol("specql.transform","Transform","specql.transform/Transform",333862179,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),(function (p1__37291_SHARP_){
if(!((p1__37291_SHARP_ == null))){
if((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__37291_SHARP_.specql$transform$Transform$))){
return true;
} else {
if((!p1__37291_SHARP_.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_.call(null,specql.transform.Transform,p1__37291_SHARP_);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_.call(null,specql.transform.Transform,p1__37291_SHARP_);
}
}));
cljs.spec.alpha.def_impl.call(null,new cljs.core.Keyword("specql.transform","transform-definition","specql.transform/transform-definition",679884853),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)], null)),cljs.spec.alpha.map_spec_impl.call(null,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__37293){
return cljs.core.map_QMARK_.call(null,G__37293);
}),(function (G__37293){
return cljs.core.contains_QMARK_.call(null,G__37293,new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696));
})], null),(function (G__37293){
return (cljs.core.map_QMARK_.call(null,G__37293)) && (cljs.core.contains_QMARK_.call(null,G__37293,new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696)))], null),null])));
cljs.spec.alpha.def_impl.call(null,new cljs.core.Symbol("specql.transform","transform","specql.transform/transform",1571087831,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Keyword("specql.transform","transform-definition","specql.transform/transform-definition",679884853)),cljs.spec.alpha.fspec_impl.call(null,cljs.spec.alpha.spec_impl.call(null,new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),null,null),new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),cljs.spec.alpha.spec_impl.call(null,new cljs.core.Keyword("specql.transform","transform-definition","specql.transform/transform-definition",679884853),new cljs.core.Keyword("specql.transform","transform-definition","specql.transform/transform-definition",679884853),null,null),new cljs.core.Keyword("specql.transform","transform-definition","specql.transform/transform-definition",679884853),null,null,null));
/**
 * Return a transform definition for the given Transform instance.
 */
specql.transform.transform = (function specql$transform$transform(transform){
return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("specql.transform","transform","specql.transform/transform",-69443696),transform], null);
});

/**
* @constructor
 * @implements {cljs.core.IRecord}
 * @implements {specql.transform.Transform}
 * @implements {cljs.core.IEquiv}
 * @implements {cljs.core.IHash}
 * @implements {cljs.core.ICollection}
 * @implements {cljs.core.ICounted}
 * @implements {cljs.core.ISeqable}
 * @implements {cljs.core.IMeta}
 * @implements {cljs.core.ICloneable}
 * @implements {cljs.core.IPrintWithWriter}
 * @implements {cljs.core.IIterable}
 * @implements {cljs.core.IWithMeta}
 * @implements {cljs.core.IAssociative}
 * @implements {cljs.core.IMap}
 * @implements {cljs.core.ILookup}
*/
specql.transform.Keyword = (function (ns,__meta,__extmap,__hash){
this.ns = ns;
this.__meta = __meta;
this.__extmap = __extmap;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 139264;
});
specql.transform.Keyword.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__30863__auto__,k__30864__auto__){
var self__ = this;
var this__30863__auto____$1 = this;
return this__30863__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__30864__auto__,null);
});

specql.transform.Keyword.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__30865__auto__,k37296,else__30866__auto__){
var self__ = this;
var this__30865__auto____$1 = this;
var G__37300 = k37296;
var G__37300__$1 = (((G__37300 instanceof cljs.core.Keyword))?G__37300.fqn:null);
switch (G__37300__$1) {
case "ns":
return self__.ns;

break;
default:
return cljs.core.get.call(null,self__.__extmap,k37296,else__30866__auto__);

}
});

specql.transform.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__30877__auto__,writer__30878__auto__,opts__30879__auto__){
var self__ = this;
var this__30877__auto____$1 = this;
var pr_pair__30880__auto__ = ((function (this__30877__auto____$1){
return (function (keyval__30881__auto__){
return cljs.core.pr_sequential_writer.call(null,writer__30878__auto__,cljs.core.pr_writer,""," ","",opts__30879__auto__,keyval__30881__auto__);
});})(this__30877__auto____$1))
;
return cljs.core.pr_sequential_writer.call(null,writer__30878__auto__,pr_pair__30880__auto__,"#specql.transform.Keyword{",", ","}",opts__30879__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"ns","ns",441598760),self__.ns],null))], null),self__.__extmap));
});

specql.transform.Keyword.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__37295){
var self__ = this;
var G__37295__$1 = this;
return (new cljs.core.RecordIter((0),G__37295__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ns","ns",441598760)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator.call(null,self__.__extmap):cljs.core.nil_iter.call(null))));
});

specql.transform.Keyword.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__30861__auto__){
var self__ = this;
var this__30861__auto____$1 = this;
return self__.__meta;
});

specql.transform.Keyword.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__30858__auto__){
var self__ = this;
var this__30858__auto____$1 = this;
return (new specql.transform.Keyword(self__.ns,self__.__meta,self__.__extmap,self__.__hash));
});

specql.transform.Keyword.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__30867__auto__){
var self__ = this;
var this__30867__auto____$1 = this;
return (1 + cljs.core.count.call(null,self__.__extmap));
});

specql.transform.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__30859__auto__){
var self__ = this;
var this__30859__auto____$1 = this;
var h__30631__auto__ = self__.__hash;
if(!((h__30631__auto__ == null))){
return h__30631__auto__;
} else {
var h__30631__auto____$1 = ((function (h__30631__auto__,this__30859__auto____$1){
return (function (coll__30860__auto__){
return (-566903219 ^ cljs.core.hash_unordered_coll.call(null,coll__30860__auto__));
});})(h__30631__auto__,this__30859__auto____$1))
.call(null,this__30859__auto____$1);
self__.__hash = h__30631__auto____$1;

return h__30631__auto____$1;
}
});

specql.transform.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this37297,other37298){
var self__ = this;
var this37297__$1 = this;
return (!((other37298 == null))) && ((this37297__$1.constructor === other37298.constructor)) && (cljs.core._EQ_.call(null,this37297__$1.ns,other37298.ns)) && (cljs.core._EQ_.call(null,this37297__$1.__extmap,other37298.__extmap));
});

specql.transform.Keyword.prototype.specql$transform$Transform$ = cljs.core.PROTOCOL_SENTINEL;

specql.transform.Keyword.prototype.specql$transform$Transform$from_sql$arity$2 = (function (_,sql_value){
var self__ = this;
var ___$1 = this;
return cljs.core.keyword.call(null,self__.ns,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(sql_value)].join(''));
});

specql.transform.Keyword.prototype.specql$transform$Transform$to_sql$arity$2 = (function (_,keyword_value){
var self__ = this;
var ___$1 = this;
return cljs.core.name.call(null,keyword_value);
});

specql.transform.Keyword.prototype.specql$transform$Transform$transform_spec$arity$2 = (function (_,input_spec){
var self__ = this;
var ___$1 = this;
if(cljs.core.set_QMARK_.call(null,input_spec)){
return cljs.core.into.call(null,cljs.core.PersistentHashSet.EMPTY,cljs.core.map.call(null,((function (___$1){
return (function (p1__37294_SHARP_){
return cljs.core.keyword.call(null,self__.ns,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__37294_SHARP_)].join(''));
});})(___$1))
),input_spec);
} else {
return cljs.core.keyword_QMARK_;
}
});

specql.transform.Keyword.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__30872__auto__,k__30873__auto__){
var self__ = this;
var this__30872__auto____$1 = this;
if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ns","ns",441598760),null], null), null),k__30873__auto__)){
return cljs.core.dissoc.call(null,cljs.core._with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__30872__auto____$1),self__.__meta),k__30873__auto__);
} else {
return (new specql.transform.Keyword(self__.ns,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__30873__auto__)),null));
}
});

specql.transform.Keyword.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__30870__auto__,k__30871__auto__,G__37295){
var self__ = this;
var this__30870__auto____$1 = this;
var pred__37301 = cljs.core.keyword_identical_QMARK_;
var expr__37302 = k__30871__auto__;
if(cljs.core.truth_(pred__37301.call(null,new cljs.core.Keyword(null,"ns","ns",441598760),expr__37302))){
return (new specql.transform.Keyword(G__37295,self__.__meta,self__.__extmap,null));
} else {
return (new specql.transform.Keyword(self__.ns,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__30871__auto__,G__37295),null));
}
});

specql.transform.Keyword.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__30875__auto__){
var self__ = this;
var this__30875__auto____$1 = this;
return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"ns","ns",441598760),self__.ns],null))], null),self__.__extmap));
});

specql.transform.Keyword.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__30862__auto__,G__37295){
var self__ = this;
var this__30862__auto____$1 = this;
return (new specql.transform.Keyword(self__.ns,G__37295,self__.__extmap,self__.__hash));
});

specql.transform.Keyword.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__30868__auto__,entry__30869__auto__){
var self__ = this;
var this__30868__auto____$1 = this;
if(cljs.core.vector_QMARK_.call(null,entry__30869__auto__)){
return this__30868__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.call(null,entry__30869__auto__,(0)),cljs.core._nth.call(null,entry__30869__auto__,(1)));
} else {
return cljs.core.reduce.call(null,cljs.core._conj,this__30868__auto____$1,entry__30869__auto__);
}
});

specql.transform.Keyword.getBasis = (function (){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ns","ns",2082130287,null)], null);
});

specql.transform.Keyword.cljs$lang$type = true;

specql.transform.Keyword.cljs$lang$ctorPrSeq = (function (this__30901__auto__){
return cljs.core._conj.call(null,cljs.core.List.EMPTY,"specql.transform/Keyword");
});

specql.transform.Keyword.cljs$lang$ctorPrWriter = (function (this__30901__auto__,writer__30902__auto__){
return cljs.core._write.call(null,writer__30902__auto__,"specql.transform/Keyword");
});

specql.transform.__GT_Keyword = (function specql$transform$__GT_Keyword(ns){
return (new specql.transform.Keyword(ns,null,null,null));
});

specql.transform.map__GT_Keyword = (function specql$transform$map__GT_Keyword(G__37299){
return (new specql.transform.Keyword(new cljs.core.Keyword(null,"ns","ns",441598760).cljs$core$IFn$_invoke$arity$1(G__37299),null,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,G__37299,new cljs.core.Keyword(null,"ns","ns",441598760))),null));
});

/**
 * Return a transformation that converts read strings to keyword and back again.
 *   Optionally takes a namespace for the generated keywords.
 */
specql.transform.to_keyword = (function specql$transform$to_keyword(var_args){
var G__37306 = arguments.length;
switch (G__37306) {
case 0:
return specql.transform.to_keyword.cljs$core$IFn$_invoke$arity$0();

break;
case 1:
return specql.transform.to_keyword.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

specql.transform.to_keyword.cljs$core$IFn$_invoke$arity$0 = (function (){
return specql.transform.to_keyword.call(null,null);
});

specql.transform.to_keyword.cljs$core$IFn$_invoke$arity$1 = (function (ns){
return specql.transform.__GT_Keyword.call(null,ns);
});

specql.transform.to_keyword.cljs$lang$maxFixedArity = 1;


//# sourceMappingURL=transform.js.map?rel=1510137274601
